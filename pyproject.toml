[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "compclasses"
version = "0.4.2"
description = "Prefer composition over inheritance"

license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.8"
authors = [{name = "Francesco Bruzzesi"}]

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.urls]
documentation = "https://fbruzzesi.github.io/compclasses/"
repository = "https://github.com/fbruzzesi/compclasses/"
issue-tracker = "https://github.com/fbruzzesi/compclasses/issues"


[project.optional-dependencies]
dev = [
    "hatch",
    "pre-commit==2.21.0",
    "ruff>=0.1.0",
]

test = [
    "interrogate>=1.5.0",
    "pytest==7.2.0",
    "pytest-xdist==3.2.1",
    "coverage==7.2.1",
]

docs = [
    "mkdocs>=1.4.2",
    "mkdocs-material>=9.2.0",
    "mkdocstrings[python]>=0.20.0",
    "mkdocs-autorefs",
]

all-dev = ["compclasses[dev,docs,test]"]

[tool.setuptools.packages.find]
include = ["compclasses*"]
exclude = ["docs", "tests", "data", "docker", "results", "notebooks", "kubernetes"]

[tool.setuptools.package-data]
deczoo = ["py.typed"]

[tool.ruff]
line-length = 120
extend-select = ["I"]
ignore = [
    "E731",  # do not assign a `lambda` expression, use a `def`
    ]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.interrogate]
ignore-nested-functions = true
ignore-module = true
ignore-init-method = true
ignore-private = true
ignore-magic = true
ignore-property-decorators = true
fail-under = 95
verbose = 2 # 0 (minimal output), 1 (-v), 2 (-vv)

[tool.mypy]
ignore_missing_imports = true

[tool.coverage.run]
source = ["compclasses/"]